---
import type { MarkdownHeading } from "astro";
import BaseMeta from "../components/BaseMeta.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";

type Props = {
	title?: string;
	description?: string;
	headings?: MarkdownHeading[];
	imageUrl?: string;
};

const { headings, title, description, imageUrl } = Astro.props;
const currentUrl = Astro.url;
---

<!doctype html>
<html lang="ja">
  <head>
    <BaseMeta
      title={title}
      currentUrl={currentUrl}
      description={description}
      imageUrl={imageUrl}
    />
  </head>
  <body
    class="font-sans prose prose-zinc dark:prose-invert max-w-unset! bg-primary grid grid-rows-[auto_minmax(0,1fr)_auto] min-h-screen"
  >
    <Header headings={headings} />
    <slot />
    <Footer />
  </body>
</html>

<script is:inline>
  const COLOR_SCHEME_QUERY = "(prefers-color-scheme: dark)";

  const getPreferredColorScheme = () => {
    if (typeof window === "undefined") {
      return "light";
    }

    return window.matchMedia(COLOR_SCHEME_QUERY).matches ? "dark" : "light";
  };

  const onChange = () => {
    const theme = getPreferredColorScheme();
    document.documentElement.classList.toggle("dark", theme === "dark");
  };

  window.matchMedia(COLOR_SCHEME_QUERY).addEventListener("change", onChange);
  onChange();
</script>
