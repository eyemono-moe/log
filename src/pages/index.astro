---
import { render } from "astro:content";
import { parseISO } from "date-fns";
import PostItem from "../components/PostItem.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import { getArticles } from "../utils/getArticles";
import { getPosts } from "../utils/getPost";
import { postImageUrl } from "../utils/ogImageUrl";

const postEntries = await getPosts();

const postsWithLstMod = await Promise.all(
	postEntries.map(async (post) => {
		return {
			source: "eyemono.log" as const,
			id: post.id,
			title: post.data.title,
			imageUrl: postImageUrl(post, Astro.url.origin),
			updatedAt: parseISO(
				(await render(post)).remarkPluginFrontmatter.lastModified,
			),
			createdAt: post.data.createdAt,
		};
	}),
);

const thirdPartyPosts = await getArticles();
const allPosts = [...postsWithLstMod, ...thirdPartyPosts];
const sortedPosts = allPosts.sort(
	(a, b) => b.createdAt.getTime() - a.createdAt.getTime(),
);
---

<BaseLayout>
  <div class="w-full max-w-1200px mx-auto px-4 md:px-8">
    <h2>ls -l logs</h2>
    <div class="grid grid-cols-minmax-250px gap-x-4 gap-y-8">
      {
        sortedPosts.map((post) => (
          <PostItem
            href={
              post.source === "eyemono.log" ? `/posts/${post.id}` : post.url
            }
            source={post.source}
            title={post.title}
            imageUrl={post.imageUrl}
            lastmod={post.updatedAt}
            createdAt={post.createdAt}
          />
        ))
      }
    </div>
  </div>
</BaseLayout>
