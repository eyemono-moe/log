---
import { getCollection } from "astro:content";
import PostLayout from "../../layouts/PostLayout.astro";
import { extractText } from "../../utils/extractText";
import { ogImageUrl } from "../../utils/ogImageUrl";

export async function getStaticPaths() {
	const blogEntries = await getCollection("posts", ({ data }) => {
		// Only return published posts in production
		return import.meta.env.PROD ? data.draft !== true : true;
	});
	return blogEntries.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await entry.render();

const description =
	entry.data.summary ||
	(entry.rendered?.html &&
		extractText(entry.rendered.html).substring(0, 140).replace(/\n/g, " ")) ||
	entry.body.substring(0, 140).replace(/\n/g, "");
---

<PostLayout
  title={entry.data.title}
  headings={headings}
  description={description}
  lastmod={remarkPluginFrontmatter.lastModified}
  imageUrl={ogImageUrl(entry, Astro.url.origin)}
>
  <Content />
</PostLayout>
