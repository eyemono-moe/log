---
import { render } from "astro:content";
import PostLayout from "../../layouts/PostLayout.astro";
import { extractText } from "../../libs/extractText";
import { getPosts } from "../../libs/getPost";
import { postImageUrl } from "../../libs/ogImageUrl";

export async function getStaticPaths() {
	const blogEntries = await getPosts();
	return blogEntries.map((entry) => ({
		params: { id: entry.id },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content, headings } = await render(entry);

const description =
	entry.data.summary ||
	(entry.rendered?.html &&
		extractText(entry.rendered.html).substring(0, 140).replace(/\n/g, " ")) ||
	entry.body?.substring(0, 140).replace(/\n/g, "");
---

<PostLayout
  title={entry.data.title}
  headings={headings}
  description={description}
  createdAt={entry.data.createdAt!}
  updatedAt={// @ts-expect-error: updatedAtは後から追加されるため型定義出来ていない
  entry.data.updatedAt}
  imageUrl={postImageUrl(entry, Astro.url.origin)}
>
  <Content />
</PostLayout>
